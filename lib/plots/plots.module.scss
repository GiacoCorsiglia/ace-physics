@use "borders";
@use "colors";

.plot {
  display: block;
  max-width: 100%;
  height: auto;
  margin-left: auto;
  margin-right: auto;
  border: 1px solid colors.$neutral-800;
  border-radius: borders.$radius;

  overflow: hidden;
}

.mathForeignObject {
  pointer-events: none;

  > .mathElement {
    pointer-events: auto;

    // We want a background color that's slightly transparent, but the color is
    // in a CSS variable so we can't modify it.
    &::before {
      content: "";
      z-index: -1;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: var(--plot-ancestor-background, #{colors.$neutral-100});
      opacity: 0.85;
      border-radius: 3px;
      pointer-events: none;
    }
  }
}

.dragHandle {
  circle {
    transform-box: fill-box;
    transform-origin: center;
    transition: transform 75ms;
  }

  &:not(.dragHandleDisabled):hover,
  &:not(.dragHandleDisabled):active {
    circle {
      stroke: #999;
      transform: scale(1.3);
    }
  }
}

.bar {
  transition: opacity 150ms, fill 150ms, stroke 150ms;
}
