@use "spacing";
@use "colors";
@use "borders";
@use "fonts";
@use "controls";

.button {
  composes: controlGroupButton from "./group.module.scss";

  display: inline-block;
  position: relative;
  z-index: var(--button-z-index);

  border-radius: controls.$border-radius;
  border-style: solid;
  border-width: 1px;
  color: colors.$white;

  &.normal {
    @include fonts.ui;
    padding: spacing.$space-75 spacing.$space-200;
  }
  &.small {
    @include fonts.ui-small;
    padding: spacing.$space-75 spacing.$space-150;
  }

  transition: {
    property: box-shadow, background-color, border-color;
    duration: controls.$transition-duration;
  }

  &:not(:disabled) {
    cursor: pointer;
  }

  &:focus {
    outline: none;
  }

  &:not(:disabled):active {
    transform: translateY(1px);
  }

  // Icons.
  :global(.octicon) {
    width: 1em;
    height: auto;
  }
}

.iconFirst {
  svg {
    margin-left: -0.3rem;
    margin-right: 0.6rem;
  }
}

.iconLast {
  svg {
    margin-left: 0.6rem;
    margin-right: -0.3rem;
  }
}

@mixin button($color) {
  background: colors.shade($color, 500);
  border-color: colors.shade($color, 600);

  $shadow-color: colors.shade($color, 800);

  box-shadow: 0px 1px 4px colors.alpha($shadow-color, 0.18),
    0px 2px 8px colors.alpha($shadow-color, 0.2);

  $hover-shadow: 0px 2px 4px colors.alpha($shadow-color, 0.25),
    0px 3px 8px colors.alpha($shadow-color, 0.25);

  &:hover {
    background: colors.shade($color, 600);
    border-color: colors.shade($color, 700);
    box-shadow: $hover-shadow;
  }

  &:active {
    background: colors.shade($color, 700);
    border-color: colors.shade($color, 700);
    box-shadow: 0px 1px 4px colors.alpha($shadow-color, 0.25),
      0px 2px 8px colors.alpha($shadow-color, 0.25);
  }

  &:focus {
    box-shadow:
      // Thicker border:
      0 0 0 2px colors.shade($color, 600),
      0 1px 6px colors.alpha(colors.shade($color, 600), 0.3),
      // Actual shadow:
      $hover-shadow;
  }

  &:disabled {
    background: colors.shade($color, 300);
    border-color: colors.shade($color, 300);
    box-shadow: 0px 1px 4px colors.alpha($shadow-color, 0.18);
  }

  .disabledExplanation {
    background: colors.shade($color, 100);
    border: 1px solid colors.shade($color, 300);
    box-shadow: 0px 2px 6px 1px colors.alpha($shadow-color, 0.1);
    color: colors.shade($color, 900);
  }

  .svgCaret {
    fill: colors.shade($color, 100);
    stroke: colors.shade($color, 300);
  }
}

.green {
  @include button(colors.$green);
}
.blue {
  @include button(colors.$blue);
}
.yellow {
  @include button(colors.$yellow);
}

.disabledExplanation {
  @include fonts.ui-small;
  position: absolute;
  top: calc(100% + #{spacing.$space-75});
  width: 100%;
  left: 50%;
  transform: translateX(-50%) translateY(3px);
  margin: 0 auto;
  min-width: 13rem;
  padding: spacing.$space-75 spacing.$space-50;
  border-radius: borders.$radius;

  visibility: hidden;
  pointer-events: none;
  opacity: 0;

  transition: {
    property: opacity, visibility, transform;
    duration: 150ms;
    timing-function: ease-in;
  }

  .button:hover &,
  .button:focus & {
    visibility: visible;
    opacity: 1;
    transition-timing-function: ease-out;
    transform: translateX(-50%) translateY(0);
  }
}

.svgCaret {
  pointer-events: none;
  position: absolute;
  left: 0;
  right: 0;
  margin: 0 auto;
  bottom: 100%;
}
