@use "fonts";
@use "spacing";
@use "colors";
@use "borders";

.pageTitle {
  @include fonts.heading1;
}

.prose {
  h1 {
    @include fonts.heading1;
  }

  h2 {
    @include fonts.heading2;
  }

  h3 {
    @include fonts.heading3;
  }

  h4 {
    @include fonts.heading4;
  }

  h5 {
    @include fonts.heading5;
  }

  h6 {
    @include fonts.heading6;
  }

  ol,
  ul,
  blockquote {
    margin-left: spacing.$space-200;
  }

  ul {
    list-style-type: disc;

    ul {
      list-style-type: circle;
    }
  }

  ol {
    list-style-type: decimal;
  }

  blockquote {
    font-style: italic;
  }

  a,
  .link {
    cursor: pointer;
    text-decoration: underline;
    transition: color 75ms ease-in-out;

    &:not(:global(.text-faded)):not(:global(.text-green)):not(:global(.text-blue)):not(:global(.text-red)):not(.text-yellow) {
      color: colors.$blue-700;

      &:hover {
        color: colors.$blue-600;
      }
    }
  }

  // Reset button styles for button links.
  button.link {
    display: inline;
    margin: 0;
    padding: 0;
    font-size: inherit;
    background: none;
    border: none;
  }

  // Spacing.

  // Default.
  > * + * {
    margin-top: spacing.$space-100;
  }

  * + .subText {
    margin-top: 0;
  }

  * + h1,
  * + h2,
  * + h3,
  * + h4,
  * + h5,
  * + h6 {
    margin-top: spacing.$space-200;
  }

  li + li {
    margin-top: spacing.$space-50;
  }

  code {
    font-family: monospace;
  }

  abbr {
    position: relative;
    text-decoration: underline;
    text-decoration-line: underline;
    text-decoration-color: colors.$neutral-400;
    text-decoration-style: dotted;
    text-decoration-thickness: 0.05em;
    text-underline-offset: 0.12em;

    &::after {
      content: attr(title);
      display: block;
      position: absolute;
      z-index: 100;
      top: 100%;
      left: 0;
      width: 19rem;
      @include fonts.ui-small;
      padding: spacing.$space-50 spacing.$space-75;
      color: colors.$neutral-700;
      background-color: colors.$neutral-200;
      border: 1px solid colors.$neutral-400;
      box-shadow: 0 1px 4px colors.alpha(colors.$neutral-800, 0.1);
      border-radius: borders.$radius;

      visibility: hidden;
      opacity: 0;
      transition-property: opacity, visibility;
      transition-duration: 100ms;
    }

    &:hover {
      &::after {
        visibility: visible;
        opacity: 1;
        transition-duration: 150ms;
      }
    }
  }

  // Display Math & Images.
  // If it's at the top level, give it a margin unless its first or last. Also
  // handles the case when its nested (e.g. in a paragraph).  We have to use
  // these special classes that are added by JavaScript because there isn't a
  // CSS selector that tells us if an element has text node siblings.
  --image-margin-top: #{spacing.$space-100};
  --display-math-margin-top: #{spacing.$space-150};
  --image-margin-bottom: #{spacing.$space-100};
  --display-math-margin-bottom: #{spacing.$space-150};

  :global(.prose-actual-first-child) {
    --image-margin-top: 0;
    --display-math-margin-top: 0;
  }

  :global(.prose-actual-last-child) {
    --image-margin-bottom: 0;
    --display-math-margin-bottom: 0;
  }
}

.hyphenate {
  hyphens: auto;
  // Chrome (at least version 96) renders a weird glyph instead of a hyphen if
  // this isn't set.  It should be "\2010" but that's rendered wrong.
  -webkit-hyphenate-character: "-";
}

.boldColorBlue strong {
  color: colors.$blue-500;
}
.boldColorRed strong {
  color: colors.$red-500;
}
.boldColorGreen strong {
  color: colors.$green-500;
}
.boldColorYellow strong {
  color: colors.$yellow-500;
}

.vocabulary {
  font-weight: fonts.$bold;
  font-style: italic;
}
