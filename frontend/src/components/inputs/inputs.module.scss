@import "styles/definitions";

////////////////////////////////////////////////////////////////////////////////
// Button.
////////////////////////////////////////////////////////////////////////////////

.buttonBase {
  display: inline-block;

  &.block {
    display: block;
    width: 100%;
  }

  border-radius: $border-radius;
  padding: 0.5rem 1.5rem;
  font-size: $text-normal;
  font-family: inherit;
  line-height: inherit;
  background: none;
  color: inherit;
  border-width: 1px;
  border-style: solid;
  transition: border-color $duration-hover $easing,
    background-color $duration-hover $easing, box-shadow $duration-hover $easing;

  &:disabled {
    opacity: 0.6;
  }

  &:not(:disabled) {
    cursor: pointer;
    box-shadow: $box-shadow-border, $box-shadow;

    &:hover {
      box-shadow: $box-shadow-border, $box-shadow-hover;
    }
  }

  &:active,
  &:focus {
    outline: none;
  }

  &:active {
    transition-duration: $duration-active;
  }

  :global(.octicon) {
    position: relative;
    top: -0.1rem;
    margin-left: 0.3rem;
    margin-right: -0.3rem;
    width: 1em;
    height: auto;
  }
}

@mixin button($color) {
  background-color: $color;
  border-color: $color;
  color: #fff;

  &:not(:disabled) {
    &:hover {
      background-color: darken($color, 7.5%);
      border-color: darken($color, 10%);
    }

    &:active,
    &:focus {
      box-shadow: $box-shadow-border, 0 0 0 2px rgba(darken($color, 3%), 0.5),
        $box-shadow-active;
    }

    &:active {
      background-color: darken($color, 10%);
    }
  }
}

.primary {
  composes: buttonBase;
  @include button($green);
}

.secondary {
  composes: buttonBase;
  @include button($blue);
}

.tertiary {
  composes: buttonBase;
  @include button($help-green);
}

////////////////////////////////////////////////////////////////////////////////
// Text. TextArea. Decimal. Integer.
////////////////////////////////////////////////////////////////////////////////

@mixin input-core {
  font-size: $text-normal;
  font-family: inherit;
  line-height: inherit;

  &:disabled {
    color: $grey60;
    background-color: $grey95;
  }
}

.textInput,
.textArea,
.numberInput {
  @include input-core;
  display: block;
  border: 1px solid $grey80;
  border-radius: $border-radius;
  padding: 0.5rem 0.75rem;

  transition: border-color $duration-hover $easing,
    box-shadow $duration-hover $easing;

  &::placeholder {
    color: $grey;
  }

  &:disabled {
    border-color: $grey90;
  }

  &:not(:disabled):hover {
    border-color: $grey70;
  }

  &:focus {
    border-color: $blue;
    box-shadow: 0 0 0 1px $blue;
    outline: none;
  }
}

.textInput {
  width: 100%;
  text-overflow: ellipsis;
}

.textArea {
  width: 100%;
}

.numberInput {
  width: 100%;
  max-width: 12rem;
  text-overflow: ellipsis;
}

////////////////////////////////////////////////////////////////////////////////
// Choice.
////////////////////////////////////////////////////////////////////////////////

.choiceChoice {
  display: flex;
  align-items: center;
  border-color: $grey80;
  border-style: solid;
  border-width: 1px;
  margin-top: -1px;

  transition: border-color $duration-hover $easing;

  &:first-child {
    margin-top: 0;
    border-top-left-radius: $border-radius;
    border-top-right-radius: $border-radius;

    .choiceRadioBox {
      border-top-left-radius: $border-radius;
    }
  }

  &:last-child {
    border-bottom-left-radius: $border-radius;
    border-bottom-right-radius: $border-radius;

    .choiceRadioBox {
      border-bottom-left-radius: $border-radius;
    }
  }

  &:hover {
    position: relative;
    z-index: 2;
    border-color: $grey70;

    .choiceRadioBox {
      border-color: $grey70;
      background-color: $light-blue;
    }
  }

  &.selected,
  &.focused {
    .choiceRadioBox {
      background-color: $light-blue;
    }
  }
}

.choiceLabel {
  padding: 0.5rem 0.75rem;
}

.choiceRadioBox {
  padding: 0 1rem;
  transition: border-color $duration-hover $easing,
    background-color $duration-hover $easing;
  border-right: 1px solid $grey80;
  align-self: stretch;
  display: flex;
  align-items: center;
}

.choiceRadio {
  display: block;
}

.choiceOtherLabel {
  display: flex;
  align-items: center;
  align-self: stretch;
}

.choiceOtherLabelText {
  padding: 0.5rem 0.25rem 0.5rem 0.75rem;
}

.choiceOtherInput {
  display: block;
  @include input-core;
  flex-grow: 1;
  padding: 0.5rem 0.75rem 0.5rem 0.5rem;
  border: none;
  border-bottom-right-radius: $border-radius;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px $blue;
  }
}

////////////////////////////////////////////////////////////////////////////////
// Toggle.
////////////////////////////////////////////////////////////////////////////////

.toggleChoices {
  &.horizontal {
    display: flex;
  }

  &.vertical {
    display: inline-flex;
    flex-direction: column;
    align-items: stretch;
  }
}

.toggleChoice {
  display: block;
  border: 1px solid $grey80;
  padding: 0.5rem 0.75rem;

  transition: background-color $duration-hover $easing,
    border-color $duration-hover $easing, box-shadow $duration-hover $easing,
    color $duration-hover $easing;

  .toggleChoices.horizontal & {
    margin-left: -1px;

    &:first-child {
      margin-left: 0;
      border-top-left-radius: $border-radius;
      border-bottom-left-radius: $border-radius;
    }

    &:last-child {
      border-top-right-radius: $border-radius;
      border-bottom-right-radius: $border-radius;
    }
  }

  .toggleChoices.vertical & {
    margin-top: -1px;

    &:first-child {
      margin-top: 0;
      border-top-left-radius: $border-radius;
      border-top-right-radius: $border-radius;
    }

    &:last-child {
      border-bottom-left-radius: $border-radius;
      border-bottom-right-radius: $border-radius;
    }
  }

  &:hover,
  &.focused {
    border-color: $grey70;
    background-color: $light-blue;
  }

  &:active,
  &.selected {
    background-color: $blue;
    color: #fff;
    border-color: $blue;
    position: relative;
    z-index: 2;
  }

  &.selected.focused {
    box-shadow: 0 0 0 2px rgba($blue, 0.5);
  }
}

.toggleRadio {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;
}

////////////////////////////////////////////////////////////////////////////////
// FieldGroup.
////////////////////////////////////////////////////////////////////////////////

.label {
  display: block;
  margin-bottom: 1rem;
}

.labelsLeft {
  display: grid;

  .label {
    margin-bottom: 0;
  }

  @include above-small {
    align-items: start;

    grid-template-areas: "labels fields";
    grid-template-columns: auto 1fr;

    row-gap: 1rem;
    column-gap: 1rem;

    .label {
      text-align: right;
      padding: 0.5rem 0;
    }

    .noLabel {
      grid-column: 2;
    }
  }

  @include below-small {
    grid-template-columns: 1fr;
    row-gap: 1rem;
  }
}
